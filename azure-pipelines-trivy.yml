# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '26a65500-b05f-4a4c-a7dd-73a9e7a59dcb'
  imageRepository: 'malevarrokart'
  containerRegistryn: 'myacr21942.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  sariflog: 'CodeAnalysisLogs'

pool:
  vmImage: $(vmImageName)

stages:
  - stage: SecurityScan
    displayName: SecurityAnalysis
    jobs:
      - job: Trivy
        displayName: Trivy
        pool:
          vmImage: $(vmImageName)
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              mkdir $(sariflog)
              export TRIVY_AUTH_URL=$(URL)
              export TRIVY_USERNAME=$(USERNAME)
              export TRIVY_PASSWORD=$(PASSWORD)
              echo "[+] Fetching Trivy"
              export TRIVYVERSION=$(git ls-remote --refs --sort="version:refname" --tags https://github.com/aquasecurity/trivy | cut -d/ -f3-|tail -n1 | sed -e 's/^.//')
              echo "[+] Trivy Version:" ${TRIVYVERSION}
              wget -nv --no-cache https://github.com/aquasecurity/trivy/releases/download/v${TRIVYVERSION}/trivy_${TRIVYVERSION}_Linux-64bit.deb
              echo "[+] Installing Trivy"
              sudo dpkg -i trivy_${TRIVYVERSION}_Linux-64bit.deb
              echo "[+] Trivy Installed "${TRIVYVERSION}
              echo "[+] Running Trivy"
              echo "***Vulneability Assesment***"
              echo "[+] Show Trivy Results"
              trivy --quiet image --format sarif -o $(sariflog)/reportvuln.sarif --exit-code 0 $(containerRegistryn)/$(imageRepository)
              pwd
              cd $(sariflog)
              ls
#              echo "***License Inventory***"
#              echo "[+] Show Trivy License Inventory" 
#              trivy --quiet image -f table --scanners license --exit-code 0 $(containerRegistryn)/$(imageRepository)
#              echo "***Docker Compliance Analysis***"
#              echo "[+] Show Trivy Docker Compliance File" 
#              trivy --quiet image -f table --compliance docker-cis $(containerRegistryn)/$(imageRepository)
#              echo "***Dockerfile Analysis***"
#              echo "[+] Show Dockerfile Compliance" 
#              trivy --quiet -f table config $(dockerfilePath)
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: './$(sariflog)'
            artifact: '$(sariflog)'
            publishLocation: 'pipeline'